name: Build and Release

on:
  push:
    tags:
      - 'v*'  # Trigger the workflow on push to tags that match 'v*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        rust: [stable]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: ${{ matrix.rust }}
        profile: minimal
        override: true

    - name: Build project
      run: cargo build --release

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-release
        path: target/release/

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Download Linux artifact
      uses: actions/download-artifact@v3
      with:
        name: ubuntu-latest-release
        path: target/release/linux

    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: macos-latest-release
        path: target/release/macos

    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-latest-release
        path: target/release/windows

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name }}
        release_name: Release ${{ github.ref_name }}
        draft: false
        prerelease: false

    - name: Upload Release Asset (Linux)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/linux/your-binary-name
        asset_name: your-binary-name-linux
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (macOS)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/macos/your-binary-name
        asset_name: your-binary-name-macos
        asset_content_type: application/octet-stream

    - name: Upload Release Asset (Windows)
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./target/release/windows/your-binary-name.exe
        asset_name: your-binary-name-windows.exe
        asset_content_type: application/octet-stream
